// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace POLTest1.Tests.PolicyEnrollmentAPI
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("HO4", SourceFile="Tests\\Policy Enrollment API\\HO4.feature", SourceLine=0)]
    public partial class HO4Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "HO4.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "HO4", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Get Quote", new string[] {
                "needtorunfordev"}, SourceLine=4)]
        public virtual void GetQuote()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Quote", new string[] {
                        "needtorunfordev"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "password"});
            table82.AddRow(new string[] {
                        "webservice@realpage.com",
                        "hgC2HfBd"});
#line 6
 testRunner.Given("I have entered the authentication information to fetch the Quote Product Package " +
                    "Details", ((string)(null)), table82, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "propertyIdType",
                        "propertyID"});
            table83.AddRow(new string[] {
                        "LeasingDesk",
                        "156"});
#line 9
 testRunner.And("I have entered the property information to fetch the Quote Product Package Detail" +
                    "s", ((string)(null)), table83, "And ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "UnitIDType",
                        "UnitID"});
            table84.AddRow(new string[] {
                        "Leasingdesk",
                        ""});
#line 12
 testRunner.And("I have entered the unit information to fetch the Quote Product Package Details", ((string)(null)), table84, "And ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "firstName",
                        "middleName",
                        "lastName"});
            table85.AddRow(new string[] {
                        "Insurance",
                        "",
                        "PolicyEnroll"});
#line 15
 testRunner.And("I have entered the resident name to fetch the Quote Product Package Details", ((string)(null)), table85, "And ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "externalResID",
                        "isPrimaryResident",
                        "dateofBirth",
                        "email",
                        "mobileNumber"});
            table86.AddRow(new string[] {
                        "",
                        "true",
                        "1998-01-01",
                        "a@a.com",
                        "0000000000"});
#line 18
 testRunner.And("I have entered the resident information to fetch the Quote Product Package Detail" +
                    "s", ((string)(null)), table86, "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "coverageDate",
                        "quoteRequestSource",
                        "leaseID",
                        "isRenewal"});
            table87.AddRow(new string[] {
                        "2018-04-27",
                        "OLL Integration",
                        "234567",
                        "false"});
#line 21
 testRunner.And("I have entered the lease information to fetch the Quote Product Package Details", ((string)(null)), table87, "And ");
#line 24
 testRunner.When("I Send a Post request to fetch the Quote Product Package Details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("A valid Quote Product Package Details should be returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Send Decline Notices", new string[] {
                "needtorunfordev"}, SourceLine=27)]
        public virtual void SendDeclineNotices()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send Decline Notices", new string[] {
                        "needtorunfordev"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "propertyIdType",
                        "propertyID"});
            table88.AddRow(new string[] {
                        "LeasingDesk",
                        "156"});
#line 30
 testRunner.Given("I have entered the property information to send decline notices", ((string)(null)), table88, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "quoteId",
                        "firstName",
                        "lastName",
                        "email",
                        "address",
                        "address2",
                        "city",
                        "state",
                        "zipcode",
                        "notifyByEmail",
                        "notifyByPost"});
            table89.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 33
 testRunner.And("I have entered the quote and decline notice information", ((string)(null)), table89, "And ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "declineReasonId"});
            table90.AddRow(new string[] {
                        ""});
#line 37
 testRunner.And("I have entered the decline reason id", ((string)(null)), table90, "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "declineReason"});
            table91.AddRow(new string[] {
                        ""});
#line 42
 testRunner.And("I have entered the decline reason", ((string)(null)), table91, "And ");
#line 46
 testRunner.When("I send a post request to send the decline reasons", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.Then("A valid response should be generated from the system", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Quote Submission", new string[] {
                "needtorunfordev"}, SourceLine=49)]
        public virtual void QuoteSubmission()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Quote Submission", new string[] {
                        "needtorunfordev"});
#line 50
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "password"});
            table92.AddRow(new string[] {
                        "webservice@realpage.com",
                        "hgC2HfBd"});
#line 51
 testRunner.Given("I have entered the authentication information for quote submission", ((string)(null)), table92, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "pOAID"});
            table93.AddRow(new string[] {
                        ""});
#line 55
 testRunner.And("I have entered the Deductible Information", ((string)(null)), table93, "And ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "pOAID"});
            table94.AddRow(new string[] {
                        ""});
#line 59
 testRunner.And("I have entered the Endorsement Information", ((string)(null)), table94, "And ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "firstName",
                        "middleName",
                        "lastName"});
            table95.AddRow(new string[] {
                        "test",
                        "",
                        "Test2"});
#line 63
 testRunner.And("I have entered the resident name for quote submission", ((string)(null)), table95, "And ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "residentID",
                        "externalResID",
                        "mobileNumber",
                        "email",
                        "isPrimaryResident",
                        "dateOfBirth"});
            table96.AddRow(new string[] {
                        "13444",
                        "34566",
                        "999999999",
                        "a@a.com",
                        "true",
                        "04/04/2000"});
#line 67
 testRunner.And("I have entered the other resident information for quote submission", ((string)(null)), table96, "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "addressLine1",
                        "addressLine2",
                        "city",
                        "state",
                        "zipCode"});
            table97.AddRow(new string[] {
                        "123 Test Drive",
                        "",
                        "Test City",
                        "CA",
                        ""});
#line 71
 testRunner.And("I have entered the Mailing Address Information for Quote Submission", ((string)(null)), table97, "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "quoteID",
                        "productGroupID",
                        "locationID",
                        "isMailingAddressAsUnitAddress",
                        "underwritingQuestionsAcceptance",
                        "quoteRequestSource"});
            table98.AddRow(new string[] {
                        "1234",
                        "1",
                        "12345",
                        "true",
                        "true",
                        "OLL"});
#line 75
 testRunner.And("I have entered the Quote Information", ((string)(null)), table98, "And ");
#line 79
 testRunner.When("I send a Post request for quote submission", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.Then("The quote should be successfully posted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Payment Submission", new string[] {
                "needtorunfordev"}, SourceLine=82)]
        public virtual void PaymentSubmission()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Payment Submission", new string[] {
                        "needtorunfordev"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "userId",
                        "password"});
            table99.AddRow(new string[] {
                        "webservice@realpage.com",
                        "hgC2HfBd"});
#line 84
 testRunner.Given("I have entered the authentication information for payment submission", ((string)(null)), table99, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "nameOnCard",
                        "cardType",
                        "cardNumber",
                        "cVV",
                        "cCExpDateMonth",
                        "cCExpDateFourDigitYear"});
            table100.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 88
 testRunner.And("I have entered the credit card information for payment submission", ((string)(null)), table100, "And ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "name",
                        "accountName",
                        "routingNumber",
                        "accountNumber",
                        "checkNumber"});
            table101.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 92
 testRunner.And("I have entered the ACH information for payment submission", ((string)(null)), table101, "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "paymentTypesInfo",
                        "paymentFrequency"});
            table102.AddRow(new string[] {
                        "CreditCard",
                        "Monthly"});
#line 96
 testRunner.And("I have entered the payment type information for payment submission", ((string)(null)), table102, "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "quoteID",
                        "annualPremium",
                        "modalFeePremium",
                        "termFeePremium",
                        "termPremium",
                        "noticeofPrivacyPolicyPracticesAcceptance",
                        "noticeofFraudWarningAcceptance",
                        "termsandConditionsAcceptance",
                        "isPaperLess",
                        "isSameDayDisclaimer"});
            table103.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 100
 testRunner.And("I have entered the quote and premium information", ((string)(null)), table103, "And ");
#line 104
 testRunner.When("I send a Post request for payment submission", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
 testRunner.Then("A valid response should be generated for the payment submission method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Get Policy Confirmation Document", new string[] {
                "needtorunfordev"}, SourceLine=108)]
        public virtual void GetPolicyConfirmationDocument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Policy Confirmation Document", new string[] {
                        "needtorunfordev"});
#line 109
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "policyid"});
            table104.AddRow(new string[] {
                        "12345"});
#line 111
testRunner.Given("I have provided the policy id to fetch the confirmation document", ((string)(null)), table104, "Given ");
#line 115
testRunner.When("I send a Get Request to fetch the confirmation document", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 116
testRunner.Then("A valid confirmation document response should be generated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

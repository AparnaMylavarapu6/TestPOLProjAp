// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace POLTest1.Tests.BillingAPI
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("CreditCard", SourceFile="Tests\\Billing API\\CreditCard.feature", SourceLine=0)]
    public partial class CreditCardFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreditCard.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CreditCard", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Fetch the credit card information with the card id", new string[] {
                "happypath"}, SourceLine=4)]
        public virtual void FetchTheCreditCardInformationWithTheCardId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fetch the credit card information with the card id", new string[] {
                        "happypath"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardid"});
            table15.AddRow(new string[] {
                        "2913598"});
#line 6
 testRunner.Given("I have entered the card id to fetch the credit card information", ((string)(null)), table15, "Given ");
#line 10
 testRunner.When("I send a Get request to fetch the credit card information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "residentID"});
            table16.AddRow(new string[] {
                        "79048976"});
#line 11
 testRunner.Then("A valid response code should be generated with the credit card information", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Delete the credit card information with the card id", new string[] {
                "notimplementedindev"}, SourceLine=15)]
        public virtual void DeleteTheCreditCardInformationWithTheCardId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete the credit card information with the card id", new string[] {
                        "notimplementedindev"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardid"});
            table17.AddRow(new string[] {
                        "2913598"});
#line 17
 testRunner.Given("I have entered the card id to delete the credit card information", ((string)(null)), table17, "Given ");
#line 21
 testRunner.When("I send a Delete request to delete the credit card information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then("A valid response code should be generated with the credit card information being " +
                    "deleted successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Post the credit crad information", new string[] {
                "happypath"}, SourceLine=25)]
        public virtual void PostTheCreditCradInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post the credit crad information", new string[] {
                        "happypath"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "name",
                        "cardNumber",
                        "expMonth",
                        "expYear",
                        "residentID",
                        "paymentMethod",
                        "customerReferenceID",
                        "accountReferenceID"});
            table18.AddRow(new string[] {
                        "Visa",
                        "Test Test",
                        "41111111111",
                        "09",
                        "2020",
                        "0",
                        "Monthly",
                        "3234233ASSAAS",
                        "0980989fDDDASD"});
            table18.AddRow(new string[] {
                        "1",
                        "Test Test",
                        "41111111111",
                        "09",
                        "2020",
                        "0",
                        "Monthly",
                        "3234233ASSAAS",
                        "0980989fDDDASD"});
#line 27
testRunner.Given("I have entered the credit card information to post the data", ((string)(null)), table18, "Given ");
#line 32
testRunner.When("I send a post request with the credit card information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
testRunner.Then("The CC information should be inserted successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Insert or update the credit crad information", new string[] {
                "happypath"}, SourceLine=36)]
        public virtual void InsertOrUpdateTheCreditCradInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Insert or update the credit crad information", new string[] {
                        "happypath"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "name",
                        "cardNumber",
                        "expMonth",
                        "expYear",
                        "residentID",
                        "paymentMethod",
                        "customerReferenceID",
                        "accountReferenceID"});
            table19.AddRow(new string[] {
                        "Visa",
                        "Test Test",
                        "41111111111",
                        "09",
                        "2020",
                        "0",
                        "Monthly",
                        "3234233ASSAAS",
                        "0980989fDDDASD"});
            table19.AddRow(new string[] {
                        "1",
                        "Test Test",
                        "41111111111",
                        "09",
                        "2020",
                        "0",
                        "Monthly",
                        "3234233ASSAAS",
                        "0980989fDDDASD"});
#line 38
testRunner.Given("I have entered the credit card information to insert or update the data", ((string)(null)), table19, "Given ");
#line 42
testRunner.When("I send a put request with the credit card information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
testRunner.Then("The CC information should be inserted or updated successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
